//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EditorBase.PluginRes {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class EditorBaseRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EditorBaseRes() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EditorBase.PluginRes.EditorBaseRes", typeof(EditorBaseRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creates a new Material Resource based on the Texture. ähnelt.
        /// </summary>
        public static string ActionDesc_CreateMaterial {
            get {
                return ResourceManager.GetString("ActionDesc_CreateMaterial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creates a new ShaderProgram Resource based on Vertex- and Fragmentshaders. ähnelt.
        /// </summary>
        public static string ActionDesc_CreateShaderProgram {
            get {
                return ResourceManager.GetString("ActionDesc_CreateShaderProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creates a new Sound Resource based on the AudioData. ähnelt.
        /// </summary>
        public static string ActionDesc_CreateSound {
            get {
                return ResourceManager.GetString("ActionDesc_CreateSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creates a new Texture Resource based on the Pixmap. ähnelt.
        /// </summary>
        public static string ActionDesc_CreateTexture {
            get {
                return ResourceManager.GetString("ActionDesc_CreateTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Focus Camera on GameObject. ähnelt.
        /// </summary>
        public static string ActionDesc_FocusGameObject {
            get {
                return ResourceManager.GetString("ActionDesc_FocusGameObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create a GameObject by instantiating the Prefab. ähnelt.
        /// </summary>
        public static string ActionDesc_InstantiatePrefab {
            get {
                return ResourceManager.GetString("ActionDesc_InstantiatePrefab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Resource in external editor. ähnelt.
        /// </summary>
        public static string ActionDesc_OpenResourceExternal {
            get {
                return ResourceManager.GetString("ActionDesc_OpenResourceExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open the Scene. ähnelt.
        /// </summary>
        public static string ActionDesc_OpenScene {
            get {
                return ResourceManager.GetString("ActionDesc_OpenScene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Material ähnelt.
        /// </summary>
        public static string ActionName_CreateMaterial {
            get {
                return ResourceManager.GetString("ActionName_CreateMaterial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create ShaderProgram ähnelt.
        /// </summary>
        public static string ActionName_CreateShaderProgram {
            get {
                return ResourceManager.GetString("ActionName_CreateShaderProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Sound ähnelt.
        /// </summary>
        public static string ActionName_CreateSound {
            get {
                return ResourceManager.GetString("ActionName_CreateSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Texture ähnelt.
        /// </summary>
        public static string ActionName_CreateTexture {
            get {
                return ResourceManager.GetString("ActionName_CreateTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move ähnelt.
        /// </summary>
        public static string CamView_Action_Move {
            get {
                return ResourceManager.GetString("CamView_Action_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotate ähnelt.
        /// </summary>
        public static string CamView_Action_Rotate {
            get {
                return ResourceManager.GetString("CamView_Action_Rotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale ähnelt.
        /// </summary>
        public static string CamView_Action_Scale {
            get {
                return ResourceManager.GetString("CamView_Action_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selecting... ähnelt.
        /// </summary>
        public static string CamView_Action_Select_Active {
            get {
                return ResourceManager.GetString("CamView_Action_Select_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Angle: {0:F}° ähnelt.
        /// </summary>
        public static string CamView_Status_Angle {
            get {
                return ResourceManager.GetString("CamView_Status_Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die X: {0:F} ähnelt.
        /// </summary>
        public static string CamView_Status_PosX {
            get {
                return ResourceManager.GetString("CamView_Status_PosX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Y: {0:F} ähnelt.
        /// </summary>
        public static string CamView_Status_PosY {
            get {
                return ResourceManager.GetString("CamView_Status_PosY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Z: {0:F} ähnelt.
        /// </summary>
        public static string CamView_Status_PosZ {
            get {
                return ResourceManager.GetString("CamView_Status_PosZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fades out the actual scene rendering to improve Layer visibility ähnelt.
        /// </summary>
        public static string CamViewLayer_BackPlate_Desc {
            get {
                return ResourceManager.GetString("CamViewLayer_BackPlate_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background Plate ähnelt.
        /// </summary>
        public static string CamViewLayer_BackPlate_Name {
            get {
                return ResourceManager.GetString("CamViewLayer_BackPlate_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays a uniform spatial grid ähnelt.
        /// </summary>
        public static string CamViewLayer_Grid_Desc {
            get {
                return ResourceManager.GetString("CamViewLayer_Grid_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grid ähnelt.
        /// </summary>
        public static string CamViewLayer_Grid_Name {
            get {
                return ResourceManager.GetString("CamViewLayer_Grid_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the physical constraints of a RigidBody Component ähnelt.
        /// </summary>
        public static string CamViewLayer_RigidBodyJoint_Desc {
            get {
                return ResourceManager.GetString("CamViewLayer_RigidBodyJoint_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RigidBody Joints ähnelt.
        /// </summary>
        public static string CamViewLayer_RigidBodyJoint_Name {
            get {
                return ResourceManager.GetString("CamViewLayer_RigidBodyJoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the physical shape of a RigidBody Component ähnelt.
        /// </summary>
        public static string CamViewLayer_RigidBodyShape_Desc {
            get {
                return ResourceManager.GetString("CamViewLayer_RigidBodyShape_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RigidBody Shapes ähnelt.
        /// </summary>
        public static string CamViewLayer_RigidBodyShape_Name {
            get {
                return ResourceManager.GetString("CamViewLayer_RigidBodyShape_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game View ähnelt.
        /// </summary>
        public static string CamViewState_GameView_Name {
            get {
                return ResourceManager.GetString("CamViewState_GameView_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RigidBody Editor ähnelt.
        /// </summary>
        public static string CamViewState_RigidBodyEditor_Name {
            get {
                return ResourceManager.GetString("CamViewState_RigidBodyEditor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scene Editor ähnelt.
        /// </summary>
        public static string CamViewState_SceneEditor_Name {
            get {
                return ResourceManager.GetString("CamViewState_SceneEditor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Circle... ähnelt.
        /// </summary>
        public static string ColliderEditor_CreateCircle {
            get {
                return ResourceManager.GetString("ColliderEditor_CreateCircle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Polygon... ähnelt.
        /// </summary>
        public static string ColliderEditor_CreatePolygon {
            get {
                return ResourceManager.GetString("ColliderEditor_CreatePolygon", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap CursorArrowCreateCircle {
            get {
                object obj = ResourceManager.GetObject("CursorArrowCreateCircle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap CursorArrowCreateEdge {
            get {
                object obj = ResourceManager.GetObject("CursorArrowCreateEdge", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap CursorArrowCreateLoop {
            get {
                object obj = ResourceManager.GetObject("CursorArrowCreateLoop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap CursorArrowCreatePolygon {
            get {
                object obj = ResourceManager.GetObject("CursorArrowCreatePolygon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpCamera {
            get {
                object obj = ResourceManager.GetObject("IconCmpCamera", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpCapsuleCollider {
            get {
                object obj = ResourceManager.GetObject("IconCmpCapsuleCollider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpCircleCollider {
            get {
                object obj = ResourceManager.GetObject("IconCmpCircleCollider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpEdgeCollider {
            get {
                object obj = ResourceManager.GetObject("IconCmpEdgeCollider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpLoopCollider {
            get {
                object obj = ResourceManager.GetObject("IconCmpLoopCollider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpRectCollider {
            get {
                object obj = ResourceManager.GetObject("IconCmpRectCollider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpSoundListener {
            get {
                object obj = ResourceManager.GetObject("IconCmpSoundListener", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpSpriteRenderer {
            get {
                object obj = ResourceManager.GetObject("IconCmpSpriteRenderer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpTransform {
            get {
                object obj = ResourceManager.GetObject("IconCmpTransform", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconCmpUnknown {
            get {
                object obj = ResourceManager.GetObject("IconCmpUnknown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Icon IconEye {
            get {
                object obj = ResourceManager.GetObject("IconEye", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconGameObj {
            get {
                object obj = ResourceManager.GetObject("IconGameObj", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconGameObjLink {
            get {
                object obj = ResourceManager.GetObject("IconGameObjLink", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconGameObjLinkBroken {
            get {
                object obj = ResourceManager.GetObject("IconGameObjLinkBroken", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Icon IconLogView {
            get {
                object obj = ResourceManager.GetObject("IconLogView", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        public static System.Drawing.Icon IconObjView {
            get {
                object obj = ResourceManager.GetObject("IconObjView", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        public static System.Drawing.Icon IconProjectView {
            get {
                object obj = ResourceManager.GetObject("IconProjectView", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResAudioData {
            get {
                object obj = ResourceManager.GetObject("IconResAudioData", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResDrawTechnique {
            get {
                object obj = ResourceManager.GetObject("IconResDrawTechnique", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResFont {
            get {
                object obj = ResourceManager.GetObject("IconResFont", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResFragmentShader {
            get {
                object obj = ResourceManager.GetObject("IconResFragmentShader", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResMaterial {
            get {
                object obj = ResourceManager.GetObject("IconResMaterial", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResPixmap {
            get {
                object obj = ResourceManager.GetObject("IconResPixmap", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResPrefabEmpty {
            get {
                object obj = ResourceManager.GetObject("IconResPrefabEmpty", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResPrefabFull {
            get {
                object obj = ResourceManager.GetObject("IconResPrefabFull", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResRenderTarget {
            get {
                object obj = ResourceManager.GetObject("IconResRenderTarget", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResScene {
            get {
                object obj = ResourceManager.GetObject("IconResScene", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResShaderProgram {
            get {
                object obj = ResourceManager.GetObject("IconResShaderProgram", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResSound {
            get {
                object obj = ResourceManager.GetObject("IconResSound", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResTexture {
            get {
                object obj = ResourceManager.GetObject("IconResTexture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResUnknown {
            get {
                object obj = ResourceManager.GetObject("IconResUnknown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap IconResVertexShader {
            get {
                object obj = ResourceManager.GetObject("IconResVertexShader", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Icon IconSceneView {
            get {
                object obj = ResourceManager.GetObject("IconSceneView", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application Data ähnelt.
        /// </summary>
        public static string MenuItemName_AppData {
            get {
                return ResourceManager.GetString("MenuItemName_AppData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Camera ähnelt.
        /// </summary>
        public static string MenuItemName_CamView {
            get {
                return ResourceManager.GetString("MenuItemName_CamView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log View ähnelt.
        /// </summary>
        public static string MenuItemName_LogView {
            get {
                return ResourceManager.GetString("MenuItemName_LogView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object Inspector ähnelt.
        /// </summary>
        public static string MenuItemName_ObjView {
            get {
                return ResourceManager.GetString("MenuItemName_ObjView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project View ähnelt.
        /// </summary>
        public static string MenuItemName_ProjectView {
            get {
                return ResourceManager.GetString("MenuItemName_ProjectView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resource Inspector ähnelt.
        /// </summary>
        public static string MenuItemName_ResView {
            get {
                return ResourceManager.GetString("MenuItemName_ResView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scene View ähnelt.
        /// </summary>
        public static string MenuItemName_SceneView {
            get {
                return ResourceManager.GetString("MenuItemName_SceneView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default User Data ähnelt.
        /// </summary>
        public static string MenuItemName_UserData {
            get {
                return ResourceManager.GetString("MenuItemName_UserData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Folder ähnelt.
        /// </summary>
        public static string NewFolderName {
            get {
                return ResourceManager.GetString("NewFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Doubleclick: {0} ähnelt.
        /// </summary>
        public static string ProjectFolderView_Help_Doubleclick {
            get {
                return ResourceManager.GetString("ProjectFolderView_Help_Doubleclick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t move file ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_CantMove_Caption {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_CantMove_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t move file to &apos;{0}&apos; because it would overwrite an existing file. ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_CantMove_Text {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_CantMove_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t rename file ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_CantRename_Caption {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_CantRename_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t rename file to &apos;{0}&apos; because it would overwrite an existing file. ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_CantRename_Text {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_CantRename_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete selected files? ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_ConfirmDeleteSelectedFiles_Caption {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_ConfirmDeleteSelectedFiles_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the selected files? ähnelt.
        /// </summary>
        public static string ProjectFolderView_MsgBox_ConfirmDeleteSelectedFiles_Text {
            get {
                return ResourceManager.GetString("ProjectFolderView_MsgBox_ConfirmDeleteSelectedFiles_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project ähnelt.
        /// </summary>
        public static string ProjectNameLabel {
            get {
                return ResourceManager.GetString("ProjectNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a joint type and click the add button to add a new joint to the Collider ähnelt.
        /// </summary>
        public static string PropertyDesc_AddJoint {
            get {
                return ResourceManager.GetString("PropertyDesc_AddJoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The joints second Collider, i.e. the one that is connected to this one using the joint. ähnelt.
        /// </summary>
        public static string PropertyDesc_OtherCollider {
            get {
                return ResourceManager.GetString("PropertyDesc_OtherCollider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Joint... ähnelt.
        /// </summary>
        public static string PropertyName_AddJoint {
            get {
                return ResourceManager.GetString("PropertyName_AddJoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other Collider ähnelt.
        /// </summary>
        public static string PropertyName_OtherCollider {
            get {
                return ResourceManager.GetString("PropertyName_OtherCollider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scene ähnelt.
        /// </summary>
        public static string SceneNameLabel {
            get {
                return ResourceManager.GetString("SceneNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsaved Scene ähnelt.
        /// </summary>
        public static string SceneNameNotYetSaved {
            get {
                return ResourceManager.GetString("SceneNameNotYetSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Doubleclick: {0} ähnelt.
        /// </summary>
        public static string SceneView_Help_Doubleclick {
            get {
                return ResourceManager.GetString("SceneView_Help_Doubleclick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hidden ähnelt.
        /// </summary>
        public static string SceneView_Item_Hidden {
            get {
                return ResourceManager.GetString("SceneView_Item_Hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object is currently locked and hidden. Click to show and unlock. ähnelt.
        /// </summary>
        public static string SceneView_Item_Hidden_Tooltip {
            get {
                return ResourceManager.GetString("SceneView_Item_Hidden_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locked ähnelt.
        /// </summary>
        public static string SceneView_Item_Locked {
            get {
                return ResourceManager.GetString("SceneView_Item_Locked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object is currently locked. Click to hide or unlock. ähnelt.
        /// </summary>
        public static string SceneView_Item_Locked_Tooltip {
            get {
                return ResourceManager.GetString("SceneView_Item_Locked_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lock / Hide ähnelt.
        /// </summary>
        public static string SceneView_Item_LockHide {
            get {
                return ResourceManager.GetString("SceneView_Item_LockHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to lock or hide the object while editing. ähnelt.
        /// </summary>
        public static string SceneView_Item_LockHide_Tooltip {
            get {
                return ResourceManager.GetString("SceneView_Item_LockHide_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete selected objects? ähnelt.
        /// </summary>
        public static string SceneView_MsgBox_ConfirmDeleteSelectedObjects_Caption {
            get {
                return ResourceManager.GetString("SceneView_MsgBox_ConfirmDeleteSelectedObjects_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the selected objects? ähnelt.
        /// </summary>
        public static string SceneView_MsgBox_ConfirmDeleteSelectedObjects_Text {
            get {
                return ResourceManager.GetString("SceneView_MsgBox_ConfirmDeleteSelectedObjects_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Linked to: {0} ähnelt.
        /// </summary>
        public static string SceneView_PrefabLink {
            get {
                return ResourceManager.GetString("SceneView_PrefabLink", resourceCulture);
            }
        }
    }
}
