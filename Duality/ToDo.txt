
-->	Editor Sandbox:
	-->	What about the object inspector? Should it update itsself periodically?
		-->	No, makes editing impossible
		-->	No, costs too much performance when selecting a lot of objects
		-->	But what then?
		-->	Manual update button?
		-->	...?
	-->	Testing & Usability Stuff

-->	Possible schedule:
	1.	Implement sandbox mode for editor
	2.	Implement physics & use sandbox for testing

-->	Duality Tasks (overall)
	-->	Editor Sandbox (Play | Pause | Reset)
	-->	Physics & Collision Detection
	-->	Particle Systems & Particle Editor
	-->	Ingame GUI & GUI Editor
	-->	(Property) Animations & Animation Editor




-->	Keep in mind: Saving GameObjects with PrefabLinks is currently highly data-redundant.
	-->	When in ExecutionContext.Editor, consider not saving Components that are part of the Prefab.
	-->	Can't do the same with GameObjects though, because their index is used to locate them when applying
		the PrefabLink. Changing the order or removing existing GameObjects requires extra consideration.