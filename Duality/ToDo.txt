
-->	Implement some other colliders (Rect, Ellipse, Capsule)
-->	ColliderPropertyEditor that awakes the collider when changing something
-->	Implement collision detection logic & sensor colliders
-->	Implement raycasting & stuff (Rebuild some Farseer Example with object click&drag)
-->	Port Asteroids demo to a physics-driven version, without any manual collision detection
-->	Don't forget collision groups




-->	Duality Tasks (overall)
	-->	Editor Sandbox (Play | Pause | Reset)
	-->	Physics & Collision Detection
	-->	Particle Systems & Particle Editor
	-->	Ingame GUI & GUI Editor
	-->	(Property) Animations & Animation Editor




-->	Keep in mind: Saving GameObjects with PrefabLinks is currently highly data-redundant.
	-->	When in ExecutionContext.Editor, consider not saving Components that are part of the Prefab.
	-->	Can't do the same with GameObjects though, because their index is used to locate them when applying
		the PrefabLink. Changing the order or removing existing GameObjects requires extra consideration.