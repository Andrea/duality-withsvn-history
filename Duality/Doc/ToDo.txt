
--> Font icon in the editor
-->	FontPropertyEditor
-->	Font importing & handling of fonts stored locally in .res files

-->	TextRenderer Component

-->	Figure out suitable RenderScreenOverlay-like system
	-->	Goal: Rendering screen overlay that bypasses 
		picking, camera rotation and center-aligned screen coordinates
	-->	Use ICmpScreenOverlayRenderer interface instead of extending Renderer class?
		-->	Pro: Great for debugging
		-->	Pro: Doesn't really need Renderer stuff (bounding radius, etc.. )
			because it is always visible, independent from camera transform, etc.

-->	Checklist for first Game: Asteroids
	-->	Any Usability stuff that comes up while editing / creating the game

	-->	Title Scene
	-->	Game Scene (No levels, dynamically creates stages)
	-->	Highscore Scene


-->	Usability
	-->	If a SpriteRenderer is attached a Material, consider auto-updating the Rect
	-->	Non-Parallax objects shouldn't be pickable in a parallax CamView
		-->	Selective picking / picking predicate
	-->	Is it possible to recover from deleting classes in a plugin that are still used?
	-->	Find some generalized, Plugin-friendly interface for defining such special behaviour:
		-->	Dragdrop Material to SpriteRenderer: Set SharedMaterial
		-->	Dragdrop Material to GameObject (both CamView & SceneView): If it has a SpriteRenderer, set SharedMaterial

-->	Editor Skeletton
	-->	Sandbox (Play | Pause | Reset)