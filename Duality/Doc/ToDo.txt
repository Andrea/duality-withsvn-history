
-->	BUG: Reloading Core Plugins in the editor
	-->	When reloading core plugins in the editor, GameObjects break
	-->	Specifically, their Dictionary<Type,Component> breaks; although
		DeepResolveTypReferences is processed on them, the fail to compare
		"old" Types and "reloaded" Types
	-->	While they seem to properly replace the Type references itsself,
		the Dictionary probably keeps internal GetHashCode stuff which of
		course isn't updated here.
	-->	The same problem applies to HashSet<T> and any similar collection

	-->	Possible solution:	Write a special case in DeepResolveTypeReferences
		#1					covering Dictionary<T,U> and Hashset<T> where T is
							a reflection type to be replaced. It needs to rebuild
							the collection completely.
	-->	Possible solution:	Avoid using Dictionaries and Hashsets on such types.
		#2					This would require reworking GameObject and probably
							introduce problems for the end user
	-->	Possible solution:	Introduce a SerializationSurrogate for such types in
		#3					Duality's main serializer that basically rebuilds the
							collection. Still, there might be end-user problems.

	-->	Check if #1 or #3 really would fix the problem (Just do it manually for GameObject)
		and if it does, go for #1 or #3. The latter one is probably more "clean".
	-->	If it does NOT fix the problem, it probably isn't the cause for the error / is a little
		different than expected.

	-->	Test case: Create Player object (w/o PrefabLink), recompile plugin, add another Player
		Component --> Two Player Components!


-->	Checklist for first Game: Asteroids
	-->	Any Usability stuff that comes up while editing / creating the game

	-->	Title Scene
	-->	Game Scene (No levels, dynamically creates stages)
	-->	Highscore Scene


-->	Usability
	-->	If a SpriteRenderer is attached a Material, consider auto-updating the Rect
	-->	Non-Parallax objects shouldn't be pickable in a parallax CamView
		-->	Selective picking / picking predicate
	-->	Is it possible to recover from deleting classes in a plugin that are still used?
	-->	Find some generalized, Plugin-friendly interface for defining such special behaviour:
		-->	Dragdrop Material to SpriteRenderer: Set SharedMaterial
		-->	Dragdrop Material to GameObject (both CamView & SceneView): If it has a SpriteRenderer, set SharedMaterial

-->	Editor Skeletton
	-->	Sandbox (Play | Pause | Reset)