
-->	Figure out a postprocessing system
	-->	Directly part of the Camera
	--> Replaces current RenderTarget field
		-->	Take care of picking - it needs a single RenderTarget!
	-->	n RenderTargets, m Stages
	-->	Each stage has an Input BatchInfo and an Output RenderTarget
		-->	No Input data defined: Directly use incoming geometry
		-->	No Output defined: Render to screen
		-->	Default: Single stage without Input and Output

	-->	For testing, a working RenderTargetPropertyEditor is needed
		to set up RenderTargets

	-->	Test the followign cases:
		1.	No Postprocessing (1 Stage: No Input / No Output)
		2.	Overlay Postprocessing (1 Stage: Billboard Input / No Output)
		3.	Offscreen Rendering (2 Stages: Render to texture, then render to screen)
			-->	With and without Multisampling
			-->	With and without some shader
		4.	Multiple bounces (3 or more stages)
			-->	Maybe apply the previously used shader multiple times?
			-->	Maybe try some simple blur?
		5.	Split Rendering (2 stages)
			-->	Render color data to multiple textures at once (Multi-RenderTarget)
				while splitting up the information
			-->	Render to screen and put together all information using a shader
			-->	With and without multisampling


-->	Checklist for first Game: Asteroids
	-->	Any Usability stuff that comes up while editing / creating the game

	-->	Title Scene
	-->	Game Scene (No levels, dynamically creates stages)
	-->	Highscore Scene


-->	Usability
	-->	If a SpriteRenderer is attached a Material, consider auto-updating the Rect
	-->	Non-Parallax objects shouldn't be pickable in a parallax CamView
		-->	Selective picking / picking predicate
	-->	Is it possible to recover from deleting classes in a plugin that are still used?
	-->	Find some generalized, Plugin-friendly interface for defining such special behaviour:
		-->	Dragdrop Material to SpriteRenderer: Set SharedMaterial
		-->	Dragdrop Material to GameObject (both CamView & SceneView): If it has a SpriteRenderer, set SharedMaterial

-->	Editor Skeletton
	-->	Sandbox (Play | Pause | Reset)